{"version":3,"sources":["shared_components/resizer.js","shared_components/bordered_word.js","shared_components/text_area.js","andre/12_aug/0-apology.js","andre/12_aug/1-wip.js","andre/12_aug/2-struggle.js","andre/12_aug/end.js","andre/12_aug/index.js","lib/typed/defaults.js","lib/typed/initializer.js","lib/typed/html-parser.js","lib/typed/typed.js","shared_components/typing.js","shared_components/next_arrow.js","shared_components/previous_arrow.js","shared_components/animated_image.js","andre/18_sep/index.js","shared_components/next_button.js","waheed/rushing/title_screen.js","waheed/rushing/how_to_play.js","waheed/rushing/game.js","waheed/rushing/index.js","waheed/rushing/leaderboard.js","lib/typed/typed.v1.js","shared_components/TypingV2.js","music_videos/all_i_want/index.js","andre/28_feb_2021/index.js","App.js","serviceWorker.js","index.js","images/andre.18sep/arrow.png","andre/12_aug/menu.js","images/home.png","images/page0.png","animations/scrolling.gif","images/page1.png","images/page2.png","images/end.png","images/andre.18sep/image1.png","images/andre.18sep/image2.png","images/andre.18sep/image3.png","waheed/rushing/pics/draymond_green.203110.png","waheed/rushing/pics/kevin_durant.201142.png","images/andre.29feb2021/the_view.png","images/andre.29feb2021/one.png"],"names":["Resizer","onPerfectSize","perfectWidth","perfectHeight","useState","w","window","innerWidth","h","innerHeight","currentWindowDimensions","setCurrentWindowDimensions","useEffect","addEventListener","Math","abs","css","BorderedWord","children","className","hasMouseOver","setHasMouseOver","hasSeenIcon","setHasSeenIcon","alt","src","mouseIcon","onMouseOver","setTimeout","Container","styled","div","StyledImage","img","NextDiv","PositionedTextArea","TextArea","ApologyPage","onClickNext","apology","onClick","WipPage","wip","StrugglePage","struggle","EndPage","hasLeft","setHasLeft","isRevealingLastSlide","setIsRevealingLastSlide","document","evt","toElement","relatedTarget","end","Index","isPerfectSize","setIsPerfectSize","currentPage","setCurrentPage","selectedThoughts","setSelectedThoughts","unselectedThought","setUnselectedThought","popSelected","state","_selectedThoughts","poppedThought","shift","onMenuClickNext","selected","filter","x","indexOf","pop","nextThought","getPageComponent","currentPageId","onClickNextFn","unseenThought","defaults","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","Infinity","showCursor","cursorChar","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","self","onComplete","preStringTyped","arrayPos","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","initializer","options","elementId","el","querySelector","isInput","tagName","toLowerCase","cursorBlinking","elContent","getAttribute","textContent","isPaused","map","s","trim","style","display","Array","prototype","slice","apply","stringsLength","length","i","stringEl","push","innerHTML","strPos","stopNum","curLoop","sequence","pause","status","typewrite","curString","curStrPos","typingComplete","currentElContent","this","getCurrentElContent","appendAnimationCss","value","createElement","type","setAttribute","innerCss","body","appendChild","htmlParser","curChar","substr","charAt","endTag","Typed","load","begin","start","stop","toggleBlinking","sequenceDirection","backspace","reset","restart","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","shuffleStringsIfNeeded","bindFocusEvents","classList","contains","remove","humanize","humanizer","numChars","typeHtmlChars","pauseTime","test","skip","exec","parseInt","temporaryPause","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","setPauseStatus","nextString","complete","initFadeOut","backSpaceHtmlChars","curStringAtPosition","delta","isTyping","isBlinking","add","speed","round","random","sort","str","e","insertBefore","nextSibling","Typing","words","onSetRef","typedSpan","useRef","elem","current","typed","destroy","ref","motion","NextArrow","React","forwardRef","props","initial","opacity","animate","transition","duration","arrow","PreviousArrow","AnimatedImage","id","useImperativeHandle","index","showImage","getElementById","gsap","fromTo","hideImage","to","isImageVisible","getComputedStyle","getPropertyValue","paragraphs","StyledTypedParagraph","sentenceNum","typingRef","previousBtnRef","nextBtnRef","image1Ref","image2Ref","image3Ref","imageData","image1Src","image2Src","image3Src","images","data","imageObjs","renderImages","forEach","console","log","changeSentenceNumBy","setBtnOpacities","setPreviousBtnOpacity","setNextBtnOpacity","rewind","unpause","onFinishTyping","PositionedNextButton","NextButton","getOptionList","correctAnswer","correct_answer","Option","selectedPlayers","name","draymondGreen","kevinDurant","screens","0","1","2","score","setScore","showNext","setShowNext","currentQuestionNum","setCurrentQuestionNum","selectedPlayer","optionData","optionList","optionsListElems","table","questionData","question_answer","3","CurrentScreen","TypingV2","audio","typedRef","shouldBounceKick","audioContext","AudioContext","dilla","Dilla","tempo","beatsPerBar","loopLength","StyledButton","button","Slide","events","position","function","onCompleteCallback","fadeOutKick","toggle","initMetronome","set","on","step","event","tl","timeline","bounceOpacity","AllIWant","hasAudioFileLoaded","setHasAudioFileLoaded","isPlaying","setIsPlaying","isFirstPlay","setIsFirstPlay","playButton","play","pauseButton","loadingOrPlayOrPauseButton","webAudioPlayer","node","connect","context","destination","rumisPoem","texts","one","One","textIndex","setTextIndex","bkgdRef","titleRef","textRef","btnRef","changeTextIndex","newIndex","initMontage","showTitleAndButtonsAndText","delay","theView","BorderedPage","borderColor","left","right","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports","OverlayOption","OverlayOption0","OverlayOption1","OverlayOption2","HelpSection","visible","NextPanel","Menu","numOptions","lowBeam","highBeam","opacities","setSelected","setMessage","optionMessageData","isSelected","toggleSelected","selectedCopy","idxIndex","splice","home","keys","Tagname","eval","onMouseOut"],"mappings":"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","file":"static/js/main.9cf5f724.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport React, { useState, useEffect } from \"react\";\n\nimport { jsx } from \"@emotion/core\";\nimport css from \"@emotion/css/macro\";\n\nconst Resizer = ({ onPerfectSize, perfectWidth, perfectHeight }) => {\n\n  const [currentWindowDimensions, setCurrentWindowDimensions] = useState({\n    w: window.innerWidth,\n    h: window.innerHeight,\n  });\n\n  useEffect(() => window.addEventListener(\"resize\", () => {\n    setCurrentWindowDimensions({\n      w: window.innerWidth,\n      h: window.innerHeight,\n    })\n  }), [])\n\n  if (Math.abs(perfectWidth + perfectHeight - currentWindowDimensions.w - currentWindowDimensions.h) < 20){\n    onPerfectSize()\n  }\n\n  return (\n    <div\n      css={css`\n        height: calc(100vh - 6px);\n        width: calc(100vw - 6px);\n        display: flex;\n        position: relative;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        border: 3px dashed black;\n        background-color: white;\n      `}\n    >\n      <h1>Resize until you get the perfect dimension</h1>\n      <h2\n        css={css`\n          position: absolute;\n          bottom: 0px;\n          right: 40px;\n        `}\n      >\n        {currentWindowDimensions.w} x {currentWindowDimensions.h} =/= {perfectWidth} x\n        {perfectHeight}\n      </h2>\n    </div>\n  );\n};\n\nexport default Resizer;\n","/** @jsx jsx */\n\nimport React from 'react'\n\nimport { jsx } from \"@emotion/core\";\nimport css from \"@emotion/css/macro\";\n\nconst BorderedWord = ({children}) => {\n  return (\n    <div\n      css={css`\n        height: calc(100vh - 6px);\n        width: calc(100vw - 6px);\n        display: flex;\n        position: relative;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        border: 3px solid black;\n        background-color: white;\n      `}\n    >\n      <h1>{children}</h1>\n    </div>\n  );\n}\n\nexport default BorderedWord","/** @jsx jsx */\n\nimport { useState } from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport css from \"@emotion/css/macro\";\n\nimport mouseIcon from \"../animations/scrolling.gif\";\n\nexport default ({ className, children }) => {\n  const [hasMouseOver, setHasMouseOver] = useState(false);\n  const [hasSeenIcon, setHasSeenIcon] = useState(false);\n\n  const flashIcon = () => {\n    setHasMouseOver(true);\n    setTimeout(() => {\n      setHasSeenIcon(true);\n    }, 4000);\n  };\n\n  const showMouseIcon = () => {\n    return (\n      hasMouseOver &&\n      !hasSeenIcon && (\n        <img\n          alt=\"mouse scrolling animation\"\n          css={css`\n            width: 5rem;\n          `}\n          src={mouseIcon}\n        />\n      )\n    );\n  };\n\n  return (\n    <div\n      className={className}\n      css={css`\n        position: absolute;\n        height: 200px;\n        width: 300px;\n        display: grid;\n        grid-template-columns: 90px auto;\n        grid-template-rows: auto;\n      `}\n    >\n      <div\n        css={css`\n          grid-column-start: 1;\n          grid-column-end: 2;\n          display: flex;\n          flex-direction: row;\n          justify-content: center;\n          align-items: center;\n        `}\n      >\n        {showMouseIcon()}\n      </div>\n      <div\n        onMouseOver={flashIcon}\n        css={css`\n          grid-column-start: 2;\n          grid-column-end: 3;\n          overflow: scroll;\n        `}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport css from \"@emotion/css/macro\";\n\nimport styled from \"@emotion/styled\";\nimport apology from \"../../images/page0.png\";\n\nimport TextArea from \"../../shared_components/text_area\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst StyledImage = styled.img`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst NextDiv = styled.div`\n  position: absolute;\n  right: 2vw;\n  bottom: 10vh;\n  width: 5vw;\n  height: 10vh;\n  border: 5px dotted orange;\n  font-size: 2rem;\n  font-weight: 700;\n  color: black;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst PositionedTextArea = styled(TextArea)`\n  top: 52vh;\n  min-width: 460px;\n  height: 163px;\n`;\n\nconst ApologyPage = ({ onClickNext }) => {\n  return (\n    <Container>\n      <StyledImage src={apology} />\n      {onClickNext && (\n        <NextDiv onClick={onClickNext}>\n          <span>&gt;</span>\n        </NextDiv>\n      )}\n      <PositionedTextArea>\n        <div>\n        <p>\n          I'm watching <em>Wild Strawberries</em> with a hand over my eyes,\n          blushing. Ever seen it? Currently half an hour in, I have to take\n          breaks to collect myself, as I feel shy having uncomfortable memories\n          brought up of what it's like to be young and hopeful about love. At\n          certain points, life arranges people around you in the form of a test\n          you're bound to fail and can't retake, and I've had that happen to me\n          many times. I feel like I've failed one of these tests in how I've\n          written to you, and feel like I have to apologize. I get rough when\n          I'm full of emotion, just like the family dog, scampering around and\n          scratching up the hardwood floors when a friend has arrived at the\n          door. I would like to be sober, like a proper gentleman. I'm getting\n          too old to be boyish. But being an adult seems to mean you're watching\n          life through a window, watching it slip by as the hours count up,\n          pointlessly. If I seem poorly trained at times, I apologize, it's only\n          that I'm still very excitable. I don't know if I will ever succeed in\n          being the person I would like to be - someone considerate, thoughtful,\n          and slightly sad, when left to his own devices. Nobody's enemy.\n        </p>\n\n        <p>\n          Thanks for being so easy-going as to make all of this apologizing and\n          neurosis unnecessary. Still, I felt like I had to say something.\n        </p>\n        </div>\n      </PositionedTextArea>\n    </Container>\n  );\n};\n\nexport default ApologyPage;\n\n/* \n\ntodo\n\n* switch the menu w/ apology page\n* place the next div in the right place\n* find a scrolling icon that animates once and then disappears forever\n* replace the images w/ blanks (have blanks ready and switch them out when you're ready)\n* put text\n\n*/\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\n\nimport wip from \"../../images/page1.png\";\nimport TextArea from \"../../shared_components/text_area\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst StyledImage = styled.img`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst NextDiv = styled.div`\n  position: absolute;\n  right: 2vw;\n  bottom: 10vh;\n  width: 5vw;\n  height: 10vh;\n  border: 5px dotted orange;\n  font-size: 2rem;\n  font-weight: 700;\n  color: white;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst PositionedTextArea = styled(TextArea)`\n  top: 32vh;\n  width: 460px;\n  height: 178px;\n`;\n\nconst WipPage = ({ onClickNext }) => {\n  return (\n    <Container>\n      <StyledImage src={wip} />\n      {onClickNext && (\n        <NextDiv onClick={onClickNext}>\n          <span>&gt;</span>\n        </NextDiv>\n      )}\n      <PositionedTextArea>\n        <p>\n          Some emotional trauma in my life had me turn away from writing, and\n          then, even after healing, the inertia to move the pen remained. I was\n          tired of writing my usual observations, fictional or non-fiction, and\n          the world just didn't seem to interest me in a literary way any more.\n        </p>\n        <p>\n          Then, after turning a few turns, I realized I had my artform sitting\n          in front of me the whole time. I could be a programmer of games and\n          interactive experiences! Everything on the web is so commercial; I\n          don't know many people treating the world wide web as an artform. Like\n          with filmmaking, if you want to create your art piece by yourself, you\n          will need a lot of different little skills. I don't know if I'm good\n          at all of them, but I've tried to give my eye for design some\n          practice, and next time I'll try to throw in some music and sound\n          effects too. Animation, the queen of the whole business, will come\n          last, after I have proven myself.\n        </p>\n        <p>\n          In the end, I want to start making video games. I'm writing the plot\n          to one, and thanks to our conversations, I've made one of the central\n          characters a Christian. You know, this actually might be the way I'm\n          forced read the Bible - as research for my character. I'm a little\n          lost with the plot, and maybe the Bible might start to give me ideas.\n          Before starting, I will probably do a bunch of smaller projects first\n          to whet my technical skills.\n        </p>\n      </PositionedTextArea>\n    </Container>\n  );\n};\n\nexport default WipPage;\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\n\nimport struggle from \"../../images/page2.png\";\nimport TextArea from \"../../shared_components/text_area\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst StyledImage = styled.img`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst NextDiv = styled.div`\n  position: absolute;\n  right: 2vw;\n  bottom: 10vh;\n  width: 5vw;\n  height: 10vh;\n  border: 5px dotted orange;\n  font-size: 2rem;\n  font-weight: 700;\n  color: black;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst PositionedTextArea = styled(TextArea)`\n  top: 4vh;\n  left: 39vw;\n  width: 554px;\n  height: 145px;\n`;\n\nconst StrugglePage = ({ onClickNext }) => {\n  return (\n    <Container>\n      <StyledImage src={struggle} />\n      {onClickNext && (\n        <NextDiv onClick={onClickNext}>\n          <span>&gt;</span>\n        </NextDiv>\n      )}\n      <PositionedTextArea>\n        <p>\n          I feel like I am entering a new phase in life, where I'm trying to\n          raise a firm hand to myself. I remember you speaking about your\n          wrestles with the Christian path, and in my own way, I know how it\n          feels to be disappointed and frustrated with one's progress. I\n          remember with friendliness some of the old obediances to rules I\n          maintained when I was practicing religion, and feel grateful that\n          there's someone else in my life also making some of the same efforts.\n          I don't know how to think about my life with Christian logic, but as\n          an existentialist philosopher, I'm interested in what that would look\n          like. How a Christian regards her soul might teach me to value myself\n          more, because low self-esteem powers my pessimism, the pessimism has\n          undone vast tracts of my life.\n        </p>\n\n        <p>\n          Remember how Christ cursed the fruitless tree in front of his\n          disciples? You may take it as automatic that he was right to do so,\n          but I like to think of Christ as a normal person, who alternates\n          between being right and wrong. Suppose, in this way, he actually is\n          correct about how he treated the tree. Doesn't that place this\n          situation on a pedestal, above so many other incidents in his life?\n          Somehow, the story about this tree makes my imagination bloom. What\n          if, just like that tree, all things in life are supposed to be\n          fruitful? That one is correct to damn the useless?\n        </p>\n\n        <p>\n          I was propped up behind a computer this Saturday, in a funk, but then\n          thinking of you and Christianity, this story came to mind. I drew\n          strength from it, and then decided to create all that you're seeing\n          here. Rather than sit in a funk this Saturday, I thought I should pull\n          myself out of it and write you. Thank you, as always, for being a\n          lighthouse pointing the way to a better self. I hope the other people\n          in your life appreciate it as much as I do.\n        </p>\n      </PositionedTextArea>\n    </Container>\n  );\n};\n\nexport default StrugglePage;\n","/** @jsx jsx */\n\nimport React, { useState, useEffect } from \"react\";\n\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport end from \"../../images/end.png\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst StyledImage = styled.img`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst NextDiv = styled.div`\n  position: absolute;\n  right: 2vw;\n  bottom: 10vh;\n  width: 15vw;\n  height: 10vh;\n  border: 5px dashed blue;\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: blue;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst EndPage = ({children}) => {\n  const [hasLeft, setHasLeft] = useState(false);\n  const [isRevealingLastSlide, setIsRevealingLastSlide] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener('mouseout', function(evt) {\n      if (evt.toElement == null && evt.relatedTarget == null) {\n        setHasLeft(true)\n      }\n    });\n  }, [])\n  \n\n  const nextDiv = () => {\n    return (\n      !isRevealingLastSlide && hasLeft && <NextDiv onClick={() => setIsRevealingLastSlide(true)}>\n        <span>reveal final thought?</span>\n      </NextDiv>\n    );\n  };\n\n  const nextSlide = () => {\n    return (\n      isRevealingLastSlide && children\n    )\n  }\n\n  return (\n    <Container>\n      {!isRevealingLastSlide && <StyledImage src={end} />}\n      {nextDiv()}\n      {nextSlide()}\n    </Container>\n  );\n};\n\nexport default EndPage;\n","/** @jsx jsx */\n\nimport { useState } from \"react\";\n\nimport { jsx } from \"@emotion/core\";\nimport css from \"@emotion/css/macro\";\n\nimport Resizer from \"../../shared_components/resizer\";\nimport BorderedWord from \"../../shared_components/bordered_word\";\nimport Menu from \"./menu\";\n\nimport ApologyPage from \"./0-apology\";\nimport WipPage from \"./1-wip\";\nimport StrugglePage from \"./2-struggle\";\nimport EndPage from \"./end\";\n\nconst [perfectWidth, perfectHeight] = [1000, 557];\n\nconst Index = () => {\n  const [isPerfectSize, setIsPerfectSize] = useState(false);\n  const [currentPage, setCurrentPage] = useState(\"menu\");\n  const [selectedThoughts, setSelectedThoughts] = useState([]);\n  const [unselectedThought, setUnselectedThought] = useState(-1);\n\n  const popSelected = (state) => {\n    state = state || selectedThoughts;\n    const _selectedThoughts = [...state];\n\n    const poppedThought = _selectedThoughts.shift();\n    setSelectedThoughts(_selectedThoughts);\n\n    return poppedThought;\n  };\n\n  const onMenuClickNext = (selected) => {\n    setSelectedThoughts(selected);\n    setUnselectedThought(\n      [0, 1, 2].filter((x) => selected.indexOf(x) === -1).pop()\n    );\n\n    const nextThought = popSelected(selected);\n\n    setCurrentPage(nextThought);\n  };\n\n  const onClickNext = () => {\n    const nextThought = popSelected() || \"end\";\n\n    setCurrentPage(nextThought);\n  };\n\n  const getPageComponent = (currentPageId, onClickNextFn) => {\n    switch (currentPageId) {\n      case \"menu\":\n        return <Menu onClickNext={onMenuClickNext} />;\n      case 0:\n        return <ApologyPage onClickNext={onClickNextFn} />;\n      case 1:\n        return <WipPage onClickNext={onClickNextFn} />;\n      case 2:\n        return <StrugglePage onClickNext={onClickNextFn} />;\n      case \"end\":\n        const unseenThought = getPageComponent(unselectedThought);\n        return <EndPage>{unseenThought}</EndPage>;\n      default:\n        return <BorderedWord>Invalid page, please refresh</BorderedWord>;\n    }\n  };\n\n  const getCurrentPanel = () => {\n    if (!isPerfectSize) {\n      return (\n        <Resizer\n          perfectWidth={perfectWidth}\n          perfectHeight={perfectHeight}\n          onPerfectSize={() => {\n            setIsPerfectSize(true);\n          }}\n        />\n      );\n    } else {\n      return getPageComponent(currentPage, onClickNext);\n    }\n  };\n\n  return getCurrentPanel();\n};\n\nexport default Index;\n","/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!'\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {}\n};\n\nexport default defaults;\n","import defaults from \"./defaults.js\";\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === \"string\") {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === \"input\";\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === \"string\") {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.display = \"none\";\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n    // the order of strings\n    self.sequence = [];\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: \"\",\n      curStrPos: 0,\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    this.appendAnimationCss(self);\n  }\n\n  getCurrentElContent(self) {\n    let elContent = \"\";\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === \"html\") {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendAnimationCss(self) {\n    const cssDataName = \"data-typed-js-css\";\n    if (!self.autoInsertCss) {\n      return;\n    }\n    if (!self.showCursor && !self.fadeOut) {\n      return;\n    }\n    if (document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement(\"style\");\n    css.type = \"text/css\";\n    css.setAttribute(cssDataName, true);\n\n    let innerCss = \"\";\n    if (self.showCursor) {\n      innerCss += `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n    }\n    if (self.fadeOut) {\n      innerCss += `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n    }\n    if (css.length === 0) {\n      return;\n    }\n    css.innerHTML = innerCss;\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from \"./initializer.js\";\nimport { htmlParser } from \"./html-parser.js\";\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  // #bookmark\n  // this.timeout = setTimeout(() => {\n  //   this.backspace(curString, curStrPos);\n  // }, this.backDelay);\n  unpause() {\n    this.pause.status = false;\n    this.sequenceDirection = 1;\n    this.backspace(this.curString, this.curStrPos);\n  }\n\n  rewind() {\n    if (this.arrayPos > 0) {\n      this.sequenceDirection = -1;\n      this.backspace(this.curString, this.curStrPos);\n    }\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText(\"\");\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /** #bookmark\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.sequenceDirection = 1;\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // Check if there is some text in the element, if yes start by backspacing the default message\n      if (!this.currentElContent || this.currentElContent.length === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        // Start typing\n        this.backspace(this.currentElContent, this.currentElContent.length);\n      }\n    }, this.startDelay);\n  }\n\n  // #bookmark\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substr(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === \"^\") {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === \"`\") {\n        while (curString.substr(curStrPos + numChars).charAt(0) !== \"`\") {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substr(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    // #bookmark\n    // this.timeout = setTimeout(() => {\n    //   this.backspace(curString, curStrPos);\n    // }, this.backDelay);\n    this.curString = curString;\n    this.curStrPos = curStrPos;\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  // #bookmark workin\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substr(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substr(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos += this.sequenceDirection;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  // workin\n  setSequenceDirection(delta) {\n    this.sequenceDirection = delta;\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add(\"typed-cursor--blink\");\n    } else {\n      this.cursor.classList.remove(\"typed-cursor--blink\");\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText(\"\");\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === \"html\") {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener(\"focus\", (e) => {\n      this.stop();\n    });\n    this.el.addEventListener(\"blur\", (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement(\"span\");\n    this.cursor.className = \"typed-cursor\";\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n","/** @jsx jsx */\n\nimport React, { useRef, useEffect } from \"react\";\n\nimport { jsx } from \"@emotion/core\";\nimport Typed from \"../lib/typed/typed.js\";\n\nconst Typing = ({ className, options, words, onSetRef }) => {\n  words = words || [];\n\n  options = options || {\n    strings: words,\n    typeSpeed: 20,\n    backSpeed: 5,\n    loop: true,\n    cursorChar: \"|\",\n  };\n\n  options[\"strings\"] = words;\n\n  const typedSpan = useRef();\n\n  useEffect(() => {\n    const elem = typedSpan.current;\n    elem.typed = new Typed(elem, options);\n    if (onSetRef) {\n      onSetRef(elem.typed);\n    }\n\n    // Please don't forget to cleanup animation layer\n    return () => {\n      elem.typed.destroy();\n    };\n  });\n\n  return (\n    <div className={className}>\n      <span ref={typedSpan} />\n    </div>\n  );\n};\nexport default Typing;\n","/** @jsx jsx */\n\nimport React from \"react\";\nimport { jsx } from \"@emotion/core\";\n// import css from \"@emotion/css/macro\";\nimport { motion } from \"framer-motion\";\n\nimport styled from \"@emotion/styled\";\nimport arrow from \"../images/andre.18sep/arrow.png\";\n\nconst StyledImage = styled(motion.img)`\n  width: 25px;\n  height: 25px;\n  cursor: pointer;\n`;\n\nconst NextArrow = React.forwardRef((props, ref) => (\n  <StyledImage\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1, transition: { duration: 0.5 } }}\n    ref={ref}\n    className={props.className}\n    src={arrow}\n    onClick={props.onClick}\n  />\n));\n\nexport default NextArrow;\n","\n/** @jsx jsx */\n\nimport React from 'react';\nimport { jsx } from \"@emotion/core\";\n// import css from \"@emotion/css/macro\";\n\nimport styled from \"@emotion/styled\";\nimport arrow from \"../images/andre.18sep/arrow.png\"\n\nconst StyledImage = styled.img`\n  width: 25px;\n  height: 25px;\n  cursor: pointer;\n  transform: rotateY(180deg); \n`;\n\nconst PreviousArrow = React.forwardRef((props, ref) => (\n  <StyledImage ref={ref} className={props.className} src={arrow} onClick={props.onClick} />\n));\n\nexport default PreviousArrow;","/** @jsx jsx */\n\nimport React, { useImperativeHandle, useEffect } from \"react\";\nimport { jsx } from \"@emotion/core\";\n// import css from \"@emotion/css/macro\";\nimport gsap from \"gsap\";\n\nimport styled from \"@emotion/styled\";\n\nconst StyledImage = styled.img`\n  width: 125px;\n  height: auto;\n  cursor: pointer;\n  opacity: 0;\n`;\n\nconst AnimatedImage = React.forwardRef((props, ref) => {\n  const id = `image-${Math.random()}`;\n\n  useImperativeHandle(ref, () => ({\n    index() {\n      return props.index;\n    },\n    showImage() {\n      const elem = document.getElementById(id);\n      gsap.fromTo(\n        elem,\n        { opacity: 0, x: 100, duration: 0.5 },\n        { opacity: 1, x: 0 }\n      );\n    },\n    hideImage() {\n      const elem = document.getElementById(id);\n      gsap.to(elem, { opacity: 0, duration: 0.2 });\n    },\n    isImageVisible() {\n      const elem = document.getElementById(id);\n\n      const opacity = parseInt(\n        window.getComputedStyle(elem).getPropertyValue(\"opacity\")\n      );\n      return opacity > 0;\n    },\n  }));\n\n  return <StyledImage id={id} className={props.className} src={props.src} />;\n});\n\nexport default AnimatedImage;\n","/** @jsx jsx */\n\nimport React, { useRef, useEffect } from \"react\";\n\nimport { jsx } from \"@emotion/core\";\nimport css from \"@emotion/css/macro\";\nimport gsap from \"gsap\";\n\nimport Typing from \"../../shared_components/typing\";\nimport styled from \"@emotion/styled\";\nimport NextArrow from \"../../shared_components/next_arrow\";\nimport PreviousArrow from \"../../shared_components/previous_arrow\";\n\nimport AnimatedImage from \"../../shared_components/animated_image\";\n\nimport image1Src from \"../../images/andre.18sep/image1.png\";\nimport image2Src from \"../../images/andre.18sep/image2.png\";\nimport image3Src from \"../../images/andre.18sep/image3.png\";\n\nimport \"./main.css\";\n\nconst paragraphs = [\n  \"Hey André!\",\n  \"(First, a word of warning - try not to click the arrows while typing or deleting is going on - that breaks things...)\",\n  `Thank you so much for your letter and your encouraging comments and feedback on my \"piece\"! I feel grateful to have your thoughtful reaction to it. I was literally on Cloud 9 when you wrote, because now I knew that I hadn't wasted your time showing it to you. Maybe one day my work might find an audience, after all. Isn't that the dream for all of us artists, never mind the money? Just give us some kind of net made of human arms to fall backwards into whenever we have to ask ourselves if our work matters? Even though we've never talked about this directly - and we should! - I'm sure you're similar to me in this way, and you also would like the public at large to see the work you've done. What would be the message you'd want your art to get out first?`,\n  `I have so much to learn from your reaction to my interactive letter - for example, there is a total of only 3 \"thoughts\", so you did indeed see them all. That was me only toying with my audience's expectations. Maybe if I made it clearer that there were only 3 thoughts, the final thought reveal would make it clear that I never intended to leave my audience hanging - I was only teasing by making you choose 2 at the beginning.`,\n  `Anyway, here's a new one! Basic, but you know, everything's a start. I'll hesitate to say more at this point, in anticipation of your forthcoming letter, but I hope you land that SAT tutoring job! Keeping my fingers crossed for you. Life is some tough business, isn't it? A friend of mine says that if you're alive and you say you're not struggling, you're lying. Jobwise, I'm sweating it out over here too in my own way, but I'll do my best to hang on - I'm sure I have many more fights in me to go.`,\n  `Stay well and cheerful,`,\n  `Hassan`,\n];\n\nconst StyledTypedParagraph = styled(Typing)`\n  width: 500px;\n  height: 250px;\n  font-family: \"Bree Serif\", serif;\n  color: #673ab7;\n  font-size: 1.1rem;\n`;\n\nlet sentenceNum = 1;\n\nconst Index = () => {\n  const typingRef = useRef();\n  const previousBtnRef = useRef();\n  const nextBtnRef = useRef();\n\n  const image1Ref = useRef();\n  const image2Ref = useRef();\n  const image3Ref = useRef();\n\n  const imageData = [\n    { index: 2, src: image1Src, ref: image1Ref },\n    { index: 3, src: image2Src, ref: image2Ref },\n    { index: 5, src: image3Src, ref: image3Ref },\n  ];\n\n  const makeImage = (index, src, ref) => (\n    <AnimatedImage\n      ref={ref}\n      css={css`\n        position: absolute;\n        left: 500px;\n        top: 0;\n      `}\n      src={src}\n      index={index}\n    />\n  );\n\n  const images = imageData.map((data) =>\n    makeImage(data.index, data.src, data.ref)\n  );\n\n  const imageObjs = imageData.map((data) => ({\n    index: data.index,\n    ref: data.ref,\n  }));\n\n  const setPreviousBtnOpacity = () => {\n    if (sentenceNum === paragraphs.length) {\n      gsap.to(previousBtnRef.current, { opacity: 0, duration: 0.5 });\n    } else {\n      const opacity = sentenceNum > 1 ? 1 : 0;\n      gsap.to(previousBtnRef.current, { opacity, duration: 0.5 });\n    }\n  };\n\n  const setNextBtnOpacity = () => {\n    const opacity = sentenceNum < paragraphs.length ? 1 : 0;\n    gsap.to(nextBtnRef.current, { opacity, duration: 0.5 });\n  };\n\n  const renderImages = () => {\n    imageObjs.forEach(({ index, ref }) => {\n      const isShowingImage = ref.current.index() === sentenceNum;\n\n      if (isShowingImage) {\n        console.log(\"isShowingImage, will show image\");\n        ref.current.showImage();\n      } else if (ref.current.isImageVisible()) {\n        // image is shown\n        ref.current.hideImage();\n      }\n    });\n  };\n\n  const changeSentenceNumBy = (delta) => {\n    sentenceNum += delta;\n\n    setBtnOpacities();\n    renderImages();\n  };\n\n  const setBtnOpacities = () => {\n    setPreviousBtnOpacity();\n    setNextBtnOpacity();\n  };\n\n  const onClickPrevious = () => {\n    if (sentenceNum > 1) {\n      typingRef.current.rewind();\n      changeSentenceNumBy(-1);\n    }\n  };\n  const onClickNext = () => {\n    console.log(\"baz\");\n    if (sentenceNum < paragraphs.length) {\n      console.log(\"bar\");\n      typingRef.current.unpause();\n      changeSentenceNumBy(+1);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"using effect\");\n    renderImages();\n  }, []);\n\n  // console.log('using effect')\n\n  return (\n    <div\n      css={css`\n        position: relative;\n        left: 1rem;\n        top: 1rem;\n      `}\n    >\n      <div>\n        <PreviousArrow\n          ref={previousBtnRef}\n          css={css`\n            opacity: 0;\n          `}\n          onClick={onClickPrevious}\n        />\n        {/* <button ref={nextBtnRef} onClick={onClickNext}>next</button> */}\n        <NextArrow\n          ref={nextBtnRef}\n          onClick={onClickNext}\n          css={css`\n            margin-left: 1rem;\n          `}\n        />\n      </div>\n      <StyledTypedParagraph\n        onFinishTyping={setBtnOpacities}\n        words={paragraphs}\n        onSetRef={(elem) => {\n          typingRef.current = elem;\n        }}\n      />\n\n      {images}\n    </div>\n  );\n};\nexport default Index;\n\n/*\n\nTest Paragraphs\n\nconst paragraphs = [\n  \"The light of a candle\",\n  \"Is transferred to another candle—\",\n  // \"Spring twilight\",\n  // \"- Yosa Buson\",\n  // \"You, yourself, as much as anybody\",\n  // \"in the entire universe, deserve\",\n  // \"your love and affection.\",\n];\n\n\n\nTodo\n\n+ Get typed.js to stop when I want it\n  - get it to stop\n  - get it to continue when you call next()\n= arrows\n  + replace text w/ images\n  + refs\n  + animate fade in/out\n  - hide/grey out while typing (shit, this will be hard)\n* Place the images\n* Animation everything\n* Tidy up\n  - move arrows to the top\n  - add some color!\n\n\n\nUnsorted Features\n\n+ Fade in the images\n* fade out the buttons while typing\n* Add music/\n* Change the font\n* Add music\n  - instrumental (bocherini string quintets - a presto on loop)\n\n\nAsides\n\nWhenever you get lost, write! That's being fruitful.\n\n*/\n\n// const paragraphs = [\n//   \"The light of a candle\",\n//   \"Is transferred to another candle—\",\n//   \"Spring twilight\",\n//   \"- Yosa Buson\",\n//   \"You, yourself, as much as anybody\",\n//   \"in the entire universe, deserve\",\n//   \"your love and affection.\",\n// ];\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport css from \"@emotion/css/macro\";\n\nimport styled from \"@emotion/styled\";\n\nconst NextDiv = styled.div`\n  position: absolute;\n  right: 2vw;\n  bottom: 10vh;\n  width: 5vw;\n  height: 10vh;\n  border: 5px dotted orange;\n  font-size: 2rem;\n  font-weight: 700;\n  color: black;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport default NextDiv;","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport React from \"react\";\nimport BorderedWord from \"../../shared_components/bordered_word\";\nimport NextButton from \"../../shared_components/next_button\";\n\nconst PositionedNextButton = styled(NextButton)`\n  position: absolute;\n  top: 64vh;\n  left: 84vh;\n`;\n\nexport default ({ onClickNext }) => {\n  return (\n    <div\n      css={css`\n        position: relative;\n        width: 100vw;\n        height: 100vh;\n      `}\n    >\n      <BorderedWord>Waheed, stop rushing.</BorderedWord>\n      <PositionedNextButton onClick={onClickNext}>&gt;</PositionedNextButton>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport React from \"react\";\nimport BorderedWord from \"../../shared_components/bordered_word\";\nimport NextButton from \"../../shared_components/next_button\";\n\nconst PositionedNextButton = styled(NextButton)`\n  position: absolute;\n  top: 64vh;\n  left: 84vh;\n`;\n\nexport default ({ onClickNext }) => {\n  return (\n    <div\n      css={css`\n        position: relative;\n        width: 100vw;\n        height: 100vh;\n      `}\n    >\n      <BorderedWord>\n        <div>\n          <h1>How to Play</h1>\n          <p>You will be shown the picture of a basketball player. Select the correct name for the player and get 5 points. There are 20 names to get through. Good luck getting the high-score</p>\n        </div>\n      </BorderedWord>\n      <PositionedNextButton onClick={onClickNext}>&gt;</PositionedNextButton>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport React, { useState } from \"react\";\nimport BorderedWord from \"../../shared_components/bordered_word\";\nimport NextButton from \"../../shared_components/next_button\";\n\nimport draymondGreen from \"./pics/draymond_green.203110.png\";\nimport kevinDurant from \"./pics/kevin_durant.201142.png\";\n\nconst PositionedNextButton = styled(NextButton)`\n  position: absolute;\n  top: 64vh;\n  left: 84vh;\n`;\n\nconst getOptionList = (correctAnswer) => {\n  return {\n    options: [correctAnswer, \"Jaylen Adams\", \"Steven Adams\", \"Bam Adebayo\"],\n    correct_answer: 0,\n  };\n};\n\nconst getSelectedPlayers = () => {\n  return [\n    { name: \"Draymond Green\", src: draymondGreen },\n    { name: \"Kevin Durant\", src: kevinDurant },\n  ];\n};\n\nconst Option = ({ children, onClick }) => {\n  return <button onClick={onClick}>{children}</button>;\n};\n\nconst saveData = () => {\n  // push data to endpoint\n}\n\nconst pointsPerAnswer = 5;\nconst selectedPlayers = getSelectedPlayers();\n\nexport default ({ onClickNext }) => {\n  const [score, setScore] = useState(0);\n  const [showNext, setShowNext] = useState(false);\n  const [currentQuestionNum, setCurrentQuestionNum] = useState(0);\n  const selectedPlayer = selectedPlayers[currentQuestionNum];\n  const optionData = getOptionList(selectedPlayer.name);\n  const optionList = optionData.options;\n  const onSelectedAnswer = (index) => {\n\n    console.log(optionData);\n    console.table({index});\n\n    if (optionData.correct_answer === index) {\n      setScore(score + pointsPerAnswer);\n    }\n\n    if (currentQuestionNum < selectedPlayers.length - 1){\n      setCurrentQuestionNum(currentQuestionNum + 1);\n    }\n    else{\n      saveData();\n      setShowNext(true);\n    }\n  };\n  const optionsListElems = optionList.map((x, i) => (\n    <li><Option onClick={() => onSelectedAnswer(i)}>{x}</Option></li>\n  ));\n  const options = <ul>{optionsListElems}</ul>\n  const questionData = {\n    question_answer: selectedPlayer,\n    options: getOptionList(selectedPlayer.name),\n  };\n  const maybeShowNextButton = () => {\n    return showNext && <PositionedNextButton onClick={onClickNext}>&gt;</PositionedNextButton>\n  }\n\n  return (\n    <div\n      css={css`\n        position: relative;\n        width: 100vw;\n        height: 100vh;\n      `}\n    >\n      <BorderedWord>\n        <div>\n          <h1>Score: {score}</h1>\n          <p>\n            <img\n              alt=\"Basketball player\"\n              src={questionData.question_answer.src}\n            />\n          </p>\n          <p>{options}</p>\n        </div>\n      </BorderedWord>\n      {maybeShowNextButton()}\n    </div>\n  );\n};\n\n/*\n\nTodo:\n\n* Create Hasura project for Waheed, stop rushing\n* Post data to save that shit\n* Load data on the leaderboard page\n* Polish the game page\n* Polish the leaderboard page\n* Add video to the first page\n* Last looks\n* Launch\n\n*/","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport React, { useState } from \"react\";\nimport TitleScreen from \"./title_screen\";\nimport HowToPlay from './how_to_play';\nimport Game from './game';\nimport Leaderboard from \"./leaderboard\";\n\nconst screens = {\n  0: TitleScreen,\n  1: HowToPlay,\n  2: Game,\n  3: Leaderboard\n}\n\nconst TITLE_SCREEN_ID = 0\nconst LEADERBOARD_ID = 1\n\nexport default () => {\n\n  // check for cookie, see if its set\n\n  let hasPlayedBefore = false;\n\n  const [ currentPage, setCurrentPage ] = useState( hasPlayedBefore ? LEADERBOARD_ID : TITLE_SCREEN_ID)\n\n  const CurrentScreen = screens[currentPage]\n  const onClickNext = () => {\n    setCurrentPage(currentPage + 1)\n  }\n\n  return (\n    // current\n    <CurrentScreen onClickNext={onClickNext} />\n  );\n};\n\n/*\n\nTodo:\n\nStarted Thu 3 Sep\n\n* Just flow through the panels\n  - next button on index\n* can only play the game once\n* write the game\n  - json with the data i need\n    - fake names\n    - player\n      - name\n      - img location\n  - layout the scene\n    - your score\n    - players face\n    - rendered options\n* Sketch the content in the panels, text only\n* play through\n* accessible\n  - imgs\n  - tab works\n* mobile view\n* add video\n* add player imgs\n* style it the best you can\n  - fonts\n  - layout, lines, rectangles\n\n* \n\n*/\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport React from \"react\";\nimport BorderedWord from \"../../shared_components/bordered_word\";\nimport NextButton from \"../../shared_components/next_button\";\n\nexport default () => {\n  return (\n    <div\n      css={css`\n        position: relative;\n        width: 100vw;\n        height: 100vh;\n      `}\n    >\n      <BorderedWord>Leaderboard</BorderedWord>\n    </div>\n  );\n};","import { initializer } from \"./initializer.js\";\nimport { htmlParser } from \"./html-parser.js\";\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  // #bookmark\n  // this.timeout = setTimeout(() => {\n  //   this.backspace(curString, curStrPos);\n  // }, this.backDelay);\n  unpause() {\n    this.pause.status = false;\n    this.sequenceDirection = 1;\n    this.backspace(this.curString, this.curStrPos);\n  }\n\n  rewind() {\n    if (this.arrayPos > 0) {\n      this.sequenceDirection = -1;\n      this.backspace(this.curString, this.curStrPos);\n    }\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText(\"\");\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /** #bookmark\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.sequenceDirection = 1;\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // Check if there is some text in the element, if yes start by backspacing the default message\n      if (!this.currentElContent || this.currentElContent.length === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        // Start typing\n        this.backspace(this.currentElContent, this.currentElContent.length);\n      }\n    }, this.startDelay);\n  }\n\n  // #bookmark\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 100 / this.typeSpeed;\n      let substr = curString.substr(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === \"^\") {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === \"`\") {\n        while (curString.substr(curStrPos + numChars).charAt(0) !== \"`\") {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substr(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    // #bookmark\n    // this.timeout = setTimeout(() => {\n    //   this.backspace(curString, curStrPos);\n    // }, this.backDelay);\n    this.curString = curString;\n    this.curStrPos = curStrPos;\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  // #bookmark workin\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substr(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substr(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos += this.sequenceDirection;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  // workin\n  setSequenceDirection(delta) {\n    this.sequenceDirection = delta;\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add(\"typed-cursor--blink\");\n    } else {\n      this.cursor.classList.remove(\"typed-cursor--blink\");\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText(\"\");\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === \"html\") {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener(\"focus\", (e) => {\n      this.stop();\n    });\n    this.el.addEventListener(\"blur\", (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement(\"span\");\n    this.cursor.className = \"typed-cursor\";\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n","/** @jsx jsx */\n\nimport React, { useRef, useEffect } from \"react\";\n\nimport { jsx } from \"@emotion/core\";\nimport Typed from \"../lib/typed/typed.v1.js\";\n\nconst TypingV2 = ({ className, id, options, words, onSetRef }) => {\n  words = words || [];\n\n  options = {\n    strings: words,\n    typeSpeed: 20,\n    backSpeed: 1,\n    loop: true,\n    cursorChar: \"|\",\n    ...options,\n  };\n\n  // options[\"strings\"] = words;\n\n  const typedSpan = useRef();\n\n  useEffect(() => {\n    const elem = typedSpan.current;\n    elem.typed = new Typed(elem, options);\n\n    if (onSetRef) {\n      onSetRef(elem.typed);\n    }\n\n    elem.typed.stop();\n\n    // Please don't forget to cleanup animation layer\n    return () => {\n      elem.typed.destroy();\n    };\n  });\n\n  return (\n    <div id={id} className={className}>\n      <span ref={typedSpan} />\n    </div>\n  );\n};\nexport default TypingV2;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport webAudioPlayer from \"web-audio-player\";\nimport Dilla from \"dilla\";\nimport gsap from \"gsap\";\n\nimport TypingV2 from \"../../shared_components/TypingV2\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst songFile = \"/sounds/All I Want (Original Mix).mp3\";\n\nconst intro = `This is a song I very much enjoy, and I was listening to it while messing around with my computer when the idea of bringing this song to you in a format like this struck me like lightning hitting Thor's hammer. (At least, that what it felt like.) You see, I love music and music videos, but the thought of trying to make one with the only tools I have -- programming tools -- never occurred to me before. I hope to make many more of these, and with enough practice, maybe one day I might be things like these for actual musicians who want interactive pieces like these. Anyway, here goes..`;\n\nlet audio;\nlet typedRef;\nlet audioContext = new AudioContext();\nlet dilla = new Dilla(audioContext, {\n  tempo: 116,\n  beatsPerBar: 4,\n  loopLength: 200,\n});\nlet shouldBounceKick;\n\nconst bounceOpacity = ({ elementId, duration }) => {\n  const tl = gsap.timeline();\n  tl.fromTo(\n    `#${elementId}`,\n    { opacity: 0 },\n    { opacity: 1, duration: duration / 2 }\n  );\n  tl.to(`#${elementId}`, { opacity: 0, duration: duration / 2 });\n};\n\nconst StyledButton = styled.button`\n  border-radius: 50px;\n  background-color: white;\n  color: black;\n  border: 2px solid black;\n  transition: all 0.2s;\n  padding: 5px 2rem;\n\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n\nconst Slide = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst fadeOutKick = ({ onCompleteCallback }) => {\n  gsap.to(document.getElementById(\"kick-circle__wrapper\"), {\n    opacity: 0,\n    duration: 5,\n    onComplete: onCompleteCallback,\n  });\n};\n\nconst startTypingIntro = () => {\n  typedRef.current.toggle();\n};\n\nconst killBouncingKick = () => {\n  shouldBounceKick = false;\n};\n\nconst events = {\n  \"1.1.01\": {\n    name: \"a1.start_kick\",\n    position: \"*.*.01\",\n    function: () => {\n      shouldBounceKick = true;\n    },\n  },\n  \"5.1.01\": {\n    name: \"b2.fade_out_kick\",\n    position: \"8.1.01\",\n\n    // bookmark\n\n    function: () => {\n      fadeOutKick({\n        onCompleteCallback: () => {\n          killBouncingKick();\n          // hidePlayButton();\n          startTypingIntro();\n        },\n      });\n    },\n  },\n};\n\nconst initMetronome = () => {\n  // var high = {\n  //   position: \"*.1.01\",\n  // };\n  // var low = { freq: 330, duration: 15 };\n\n  dilla.set(\"metronome\", [{ position: \"*.*.01\" }]);\n\n  dilla.on(\"step\", function (step) {\n    console.log(\"step\");\n    console.log(step);\n\n    if (shouldBounceKick) {\n      bounceOpacity({ elementId: \"kick-circle\", duration: 0.2 });\n    }\n    // if (step.event === \"start\") {\n    let event;\n    //   console.log(\"kick\");\n    //   bounceOpacity({ elementId: \"kick-circle\", duration: 0.2 });\n\n    if ((event = events[step.position])) {\n      event.function();\n    }\n  });\n};\n\nconst AllIWant = () => {\n  const [hasAudioFileLoaded, setHasAudioFileLoaded] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isFirstPlay, setIsFirstPlay] = useState(true);\n  typedRef = useRef(null);\n\n  const playButton = (\n    <StyledButton\n      onClick={() => {\n        if (isFirstPlay) {\n          setTimeout(() => {\n            dilla.start();\n          }, 100);\n          setIsFirstPlay(false);\n        } else {\n          dilla.start();\n        }\n        audio.play();\n        setIsPlaying(true);\n      }}\n    >\n      Play\n    </StyledButton>\n  );\n\n  const pauseButton = (\n    <StyledButton\n      onClick={() => {\n        console.log(\"pausing\");\n        dilla.pause();\n        audio.pause();\n        setIsPlaying(false);\n      }}\n    >\n      Pause\n    </StyledButton>\n  );\n\n  const playOrPauseButton = isPlaying ? pauseButton : playButton;\n  const loadingOrPlayOrPauseButton = hasAudioFileLoaded ? (\n    playOrPauseButton\n  ) : (\n    <h1>Loading Song</h1>\n  );\n\n  useEffect(() => {\n    audio = webAudioPlayer(songFile);\n    initMetronome();\n\n    audio.on(\"load\", () => {\n      setHasAudioFileLoaded(true);\n      audio.node.connect(audio.context.destination);\n    });\n  }, []);\n\n  return (\n    <div\n      css={css`\n        width: 100%;\n        height: 100vh;\n        position: relative;\n        background-color: white;\n      `}\n    >\n      <Slide\n        id=\"intro-text-wrapper\"\n        css={css`\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        `}\n      >\n        <TypingV2\n          id=\"intro-text\"\n          css={css`\n            width: 40rem;\n            height: 14rem;\n            border: 2px dotted orange;\n            font-weight: 500;\n          `}\n          options={{ typeSpeed: 3 }}\n          onSetRef={(typed) => {\n            typedRef.current = typed;\n          }}\n          words={[intro]}\n        />\n      </Slide>\n      <div\n        id=\"kick-circle__wrapper\"\n        css={css`\n          position: absolute;\n          bottom: 2rem;\n          right: 2rem;\n        `}\n      >\n        <div\n          id=\"kick-circle\"\n          css={css`\n            width: 10rem;\n            height: 10rem;\n            background-color: black;\n            opacity: 0;\n            border-radius: 100%;\n          `}\n        ></div>\n      </div>\n      <Slide\n        css={css`\n          display: flex;\n          justify-content: center;\n          align-items: baseline;\n          height: 6rem;\n        `}\n      >\n        <div\n          css={css`\n            position: relative;\n            top: 2rem;\n          `}\n        >\n          {loadingOrPlayOrPauseButton}\n        </div>\n      </Slide>\n    </div>\n  );\n};\n\nexport default AllIWant;\n\n/*\n\nTodo\n\n+ Play/Pause the tune\n  + Play\n  + Pause\n+ Preload the song\n+ Get a fading in/out circle to follow the beat\n  - dilla visual metronome\n    - dilla metronome\n    - dilla console metronome\n    - gsap orange circle\n  - sync to the beat\n= Intro\n  + type out my messgae\n  = Speed things up, by having only one animation at a time\n  - fade in the tree\n* Get lyrics to follow the song\n* Add images\n  - preloading them\n* Time questions\n* Play videos\n\n\n\n\n\n\n\n\n---- Asides ----\n\nTo do: \n+ Make the button like Spotify's\n+ GSap\n  + circle fading in and out\n* Intro\n\n-- Mon 1 Feb --\n\nTodo\n\n* Replace Dilla, eventually\n= Promisify \n* Hide the the pause button while typing\n* Fade in the tree after typing done\n\n\n\n-- Sat 30 Jan --\n\n- 4:53 PM -\n\nMan, the beautiful women everywhere on the internet that I try not to get too flustered and panty over. Look, I have great taste in all things, and it isn't by accident that I stumbled through saloon doors into a YouTube harem filled with beautiful and talented women, all graciously ignoring the hearts popping out of my eyes.\n\nTodo\n\n+ Move the button to the top\n+ Fade out the kick\n* Fade in the tree over 8 measures\n  - it is a slide, and slide #1\n\n\n-- Thu 28 Jan --\n\n- 7:42 PM -\n\nIntro\n\nTitle: All I Want (fade in and out)\n\nThis is a song I very much enjoy, and I was listening to it while messing around with my computer when the idea of bringing this song to you in a format like this struck me like lightning hitting Thor's hammer. (At least, that what it felt like.) You see, I love music and music videos, but the thought of trying to make one with the only tools I have -- programming tools -- never occurred to me before. I hope to make many more of these, and with enough practice, maybe one day I might be things like these for actual musicians who want interactive pieces like these. Anyway, here goes..\n  \nPlease enjoy the show\n\nway that you in a way that  hoping you enjoy it too. I've always wanted to make a \n \n\n\n- 2:31 PM -\n\nIn theory, I should be working, but I have questions...\n\nTo do: \n+ Make the button like Spotify's\n+ GSap\n  + circle fading in and out\n\nNext few days:\n\n* Introduction:\n  - flying sentences going from right to left at different speeds, different sizes?\n  - enjoy the show\n\nNear future:\n  - lyrics\n  - pictures\n  - questions  \n\n\n\n-- Tue 26 Jan --\n\n- 7:36 PM -\n\nBy the way, this is when I started the project and devised this version of the todo list\n\n+ Play/Pause the tune\n  + Play\n  + Pause\n+ Preload the song\n* Get a fading in/out circle to follow the beat\n  - dilla visual metronome\n  - sync to the beat\n* Get lyrics to follow the song\n* Add images\n  - preloading them\n* Time questions\n* Play videos\n\n\n- 5:46 -\n\nI guess I decided today that my health is worth it. So yeah, fuck it. Byby moly. :(\n\nMy immediate next goal is to play all i want on this page w/ a play/pause button\n\nTools\n\n\n---- Scratchpad ----\n\nLyrics\n\nI'm up for a real hard time\nNow you changed your mind\nKnew I'd see the day\nGo on, have it any way\nJust enough, you say\nI'm all yours to take\n\nThis is all I want from you\nYours to give and mine to lose\nThis is all I want from you\nAll I want from you\n\nI found a feeling that was new\nAnd now we're half way through\nYou're changin' all the rules\nSay, now my friend, if you mind\nYour name upon this line\nIt seemed so black and white\n\nThis is all I want from you\nYours to give and mine to lose\nThis is all I want from you\nAll I want from you\n\nThis is all I want from you\nTime to change and time to choose\nThis is all I want from you\nAll I want from you\n\nThis is all I want from you\nYours to give and mine to lose\nThis is all I want from you\nAll I want from you\n\nThis is all I want from you\nTime to change and time to choose\nThis is all I want from you\nAll I want from you\n\nThis is all I want from you\nYours to give and mine to lose\nThis is all I want from you\nAll I want from you\n\nThis is all I want from you\nTime to change and time to choose\nThis is all I want from you\nAll I want from you\n\n\n\n*/\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport webAudioPlayer from \"web-audio-player\";\nimport gsap from \"gsap\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport theView from \"../../images/andre.29feb2021/the_view.png\";\nimport one from \"../../images/andre.29feb2021/one.png\";\nimport NextArrow from \"../../shared_components/next_arrow\";\nimport PreviousArrow from \"../../shared_components/previous_arrow\";\n\nconst songFile = \"/sounds/Cassio Kohl - Broken.mp3\";\n\nlet audio;\n\nconst delay = 18000;\nconst delayDelta = 2500;\n\nconst StyledButton = styled.button`\n  border-radius: 50px;\n  background-color: white;\n  color: black;\n  border: 2px solid black;\n  transition: all 0.2s;\n  padding: 5px 2rem;\n\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n\nconst Slide = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: scroll;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst rumisPoem = (\n  <div\n    css={css`\n      height: 70vh;\n      overflow: scroll;\n    `}\n  >\n    <h3>Prayer Is An Egg</h3>\n    <p>\n      On Resurrection Day God will say, \"What did you do with the strength and\n      energy\n    </p>\n    <p>\n      your food gave you on earth? How did you use your eyes? What did you make\n      with\n    </p>\n    <p>\n      your five senses while they were dimming and playing out? I gave you hands\n      and feet\n    </p>\n    <p>\n      as tools for preparing the ground for planting. Did you, in the health I\n      gave,\n    </p>\n    <p>\n      do the plowing?\" You will not be able to stand when you hear those\n      questions. You\n    </p>\n    <p>\n      will bend double, and finally acknowledge the glory. God will say, \"Lift\n    </p>\n    <p>\n      your head and answer the questions.\" Your head will rise a little, then\n      slump\n    </p>\n    <p>\n      again. \"Look at me! Tell what you've done,\" You try, but you fall back\n      flat\n    </p>\n    <p>\n      as a snake. \"I want every detail. Say!\" Eventually you will be able to get\n      to\n    </p>\n    <p>\n      a sitting position. \"Be plain and clear. I have given you such gifts. What\n      did\n    </p>\n    <p>\n      you do with them?\" You turn to the right looking to the prophets for help,\n      as\n    </p>\n    <p>\n      though to say,{\" \"}\n      <i>I am stuck in the mud of my life. Help me out of this!</i> They\n    </p>\n    <p>\n      will answer, those kings, \"The time for helping is past. The plow stands\n      there in\n    </p>\n    <p>\n      the field. You should have used it.\" Then you turn to the left, where your\n      family\n    </p>\n    <p>\n      is, and they will say, \"Don't look at us! This conversation is between you\n      and your\n    </p>\n    <p>\n      creator.\" Then you pray the prayer that is the essence of every ritual:{\" \"}\n      <i>God,</i>\n    </p>\n    <p>\n      <i>\n        I have no hope. I am torn to shreds. You are my first and last and only\n        refuge.\n      </i>\n    </p>\n    <p>\n      Don't do daily prayers like a bird pecking, moving its head up and down.\n      Prayer is an egg.\n    </p>\n    <p>Hatch out of the total helplessness inside.</p>\n    <p>\n      <b>-Rumi</b>\n    </p>\n  </div>\n);\nconst artwork = (\n  <div\n    css={css`\n      display: flex;\n      align-items: center;\n    `}\n  >\n    <div>\n      How tiny He must be in contrast to the sum total of everything else,\n      listed on the other side of the line that separates one from every other\n      numberable number!\n    </div>\n    <img\n      alt=\"Diagram of lonely God\"\n      css={css`\n        width: 18rem;\n      `}\n      src={one}\n    />\n  </div>\n);\n\nconst texts = [\n  `I was looking at that picture of an orange sunset sky carpeted with clouds, the art for this song on YouTube, and I realized that if all that I'm seeing was some attempt to get God to take a look, then there's a whole lot of power in God being just a single entity.`,\n  artwork,\n  `The rest of us are all here existing. To exist means having cried out for His help at least once. Even if nowadays you no longer believe...`,\n  `And so computer programmer in Ghana attempts to write his version of a song for You. On Reassurection Day, please don't have me confused for some other sinner who never thought to ask for Your grace! On my end, I will try with all my heart to be original with whatever days I have left.`,\n  `Here is a poem I read recently.`,\n  rumisPoem,\n];\n\nconst One = () => {\n  const [hasAudioFileLoaded, setHasAudioFileLoaded] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [textIndex, setTextIndex] = useState(0);\n\n  const bkgdRef = useRef(null);\n  const titleRef = useRef(null);\n  const textRef = useRef(null);\n  const btnRef = useRef(null);\n\n  const changeTextIndex = (delta) => {\n    const newIndex = textIndex + delta;\n    if (newIndex > 0 && newIndex < texts.length) {\n      setTextIndex(newIndex);\n    }\n  };\n\n  const hideBkgd = () => {\n    gsap.to(bkgdRef.current, { opacity: 0, duration: 2 });\n  };\n\n  const showTitleAndButtonsAndText = () => {\n    const tl = gsap.timeline();\n    tl.to(titleRef.current, { opacity: 1, duration: 2 });\n    tl.to(titleRef.current, { opacity: 0, duration: 2 }, 3.5);\n    tl.to(btnRef.current, { opacity: 1, duration: 1 });\n    tl.to(textRef.current, { opacity: 1, duration: 2 }, \"<\");\n  };\n\n  const showText = () => {\n    return texts[textIndex];\n  };\n\n  const initMontage = () => {\n    setTimeout(() => {\n      hideBkgd();\n    }, delay);\n\n    setTimeout(() => {\n      showTitleAndButtonsAndText();\n    }, delay + delayDelta);\n  };\n\n  const playButton = (\n    <StyledButton\n      onClick={() => {\n        audio.play();\n        setIsPlaying(true);\n\n        initMontage();\n      }}\n    >\n      Play\n    </StyledButton>\n  );\n\n  const pauseButton = (\n    <StyledButton\n      onClick={() => {\n        audio.pause();\n        setIsPlaying(false);\n      }}\n    >\n      Pause\n    </StyledButton>\n  );\n\n  const playOrPauseButton = isPlaying ? pauseButton : playButton;\n  const loadingOrPlayOrPauseButton = hasAudioFileLoaded ? (\n    playOrPauseButton\n  ) : (\n    <h1>Loading Song</h1>\n  );\n\n  useEffect(() => {\n    audio = webAudioPlayer(songFile);\n\n    audio.on(\"load\", () => {\n      setHasAudioFileLoaded(true);\n      audio.node.connect(audio.context.destination);\n    });\n  }, []);\n\n  return (\n    <div\n      css={css`\n        width: 100%;\n        height: 100vh;\n        position: relative;\n        background-color: black;\n        color: white;\n      `}\n    >\n      <Slide\n        ref={bkgdRef}\n        id=\"intro-text-wrapper\"\n        css={css`\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        `}\n      >\n        <img\n          alt=\"An orange sunset on a freeway, city at the horizon\"\n          src={theView}\n          css={css`\n            width: 100%;\n            height: auto;\n          `}\n        />\n      </Slide>\n      <Slide\n        ref={textRef}\n        id=\"intro-text-wrapper\"\n        css={css`\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          opacity: 0;\n        `}\n      >\n        <div\n          css={css`\n            max-width: 30rem;\n          `}\n        >\n          {showText()}\n        </div>\n      </Slide>\n      <Slide\n        css={css`\n          display: flex;\n          justify-content: center;\n          align-items: baseline;\n          height: 6rem;\n        `}\n      >\n        <div\n          css={css`\n            position: relative;\n            top: 1rem;\n          `}\n        >\n          {loadingOrPlayOrPauseButton}\n        </div>\n      </Slide>\n      <div\n        ref={titleRef}\n        css={css`\n          position: absolute;\n          bottom: 1rem;\n          right: 2rem;\n          opacity: 0;\n        `}\n      >\n        <h1>Just One.</h1>\n      </div>\n      <div\n        ref={btnRef}\n        css={css`\n          position: absolute;\n          bottom: 1rem;\n          width: 4rem;\n          display: flex;\n          justify-content: space-between;\n          left: 1rem;\n          opacity: 0;\n        `}\n      >\n        <PreviousArrow onClick={() => changeTextIndex(-1)} />\n        <NextArrow onClick={() => changeTextIndex(1)} />\n      </div>\n    </div>\n  );\n};\n\nexport default One;\n\n/*\n\nTodo\n\n\nTexts\n\nI was looking at a picture of an orange sunset sky carpeted with clouds, and I realized that if all that I'm seeing was some attempt to get God to take a look, then there's a whole lot of power in God being just a single entity. \n\nHow tiny He must be in contrast to the sum total of everything else, listed on the other side of the line that separates one from every other number that is numbered. \n\nOut of need, we are all here existing. To exist means having cried out for His help at least once.\n\nA computer programmer attempts to write his version of a song to You. On Reassurection Day, please don't have me confused for some other sinner who never thought to ask  for Your grace! On my end, I will try with all my heart to be original with whatever days I have left.\n\n\nAsides\n\n-- Sun 28 Feb --\n\nTodo\n\n+ Add buttons\n+ Display the messages\n+ heading\n+ Fade out the sky\n+ Fade in the rest\n= Polish\n\n\n*/\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\nimport React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Andre12Aug from \"./andre/12_aug\";\nimport Andre18Aug from \"./andre/18_sep\";\nimport Rushing from \"./waheed/rushing\";\nimport AllIWant from \"./music_videos/all_i_want/index\";\nimport One from \"./andre/28_feb_2021\";\n\n// TODO: For Wyatt (SO INAGAWA - AIRIER (CABARET RECORDINGS))\nconst BorderedPage = ({ children, borderColor, left, right }) => (\n  <div\n    css={css`\n      height: 100vh;\n      padding: 1rem;\n    `}\n  >\n    <div\n      className=\"bordered-div\"\n      css={css`\n        width: calc(100% - 1rem);\n        height: calc(100% - 3rem);\n        border: 5px solid ${borderColor};\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n      `}\n    >\n      <div\n        css={css`\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n          width: 100%;\n        `}\n      >\n        <Link to={left}>{\"<\"}</Link>\n\n        <h1\n          css={css`\n            color: ${borderColor};\n          `}\n        >\n          {children}\n        </h1>\n\n        <Link to={right}>{\">\"}</Link>\n      </div>\n    </div>\n  </div>\n);\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/re-two-crespuscular-thoughts\">\n          <Andre18Aug />\n        </Route>\n        <Route path=\"/two-crespuscular-thoughts\">\n          <Andre12Aug />\n        </Route>\n        <Route path=\"/waheed-dey-rush\">\n          <Rushing />\n        </Route>\n        <Route path=\"/waheed-dey-rush\">\n          <Rushing />\n        </Route>\n        <Route path=\"/all-i-want\">\n          <AllIWant />\n        </Route>\n        <Route path=\"/one\">\n          <One />\n        </Route>\n        <Route path=\"/red\">\n          <BorderedPage borderColor=\"red\" left=\"black\" right=\"blue\">\n            Modern\n          </BorderedPage>\n        </Route>\n        <Route path=\"/blue\">\n          <BorderedPage borderColor=\"blue\" left=\"red\" right=\"black\">\n            Letters\n          </BorderedPage>\n        </Route>\n        <Route path=\"/\">\n          <BorderedPage borderColor=\"black\" left=\"blue\" right=\"red\">\n            Fancy\n          </BorderedPage>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/arrow.2e759bf5.png\";","/** @jsx jsx */\n\nimport React, { useState } from \"react\";\n\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport css from \"@emotion/css/macro\";\n\nimport home from \"../../images/home.png\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst StyledImage = styled.img`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst OverlayOption = styled.div`\n  width: 22vw;\n  height: 60vh;\n  position: absolute;\n`;\n\nconst OverlayOption0 = styled(OverlayOption)`\n  top: 33vh;\n  left: 18vw;\n  border: 10px solid darkseagreen;\n`;\n\nconst OverlayOption1 = styled(OverlayOption)`\n  top: 33vh;\n  left: 44vw;\n  border: 10px solid orange;\n`;\n\nconst OverlayOption2 = styled(OverlayOption)`\n  top: 33vh;\n  left: 70vw;\n  border: 10px solid yellow;\n`;\n\nconst HelpSection = ({ visible, message }) => {\n  return (\n    <div\n      css={css`\n        position: absolute;\n        top: 23vh;\n        left: 18vw;\n        height: 30px;\n      `}\n    >\n      {visible && <p>{message}</p>}\n    </div>\n  );\n};\n\nconst NextPanel = ({ visible, onClick }) => {\n  return (\n    visible && (\n      <div\n        onClick={onClick}\n        css={css`\n          position: absolute;\n          top: 58vh;\n          left: 88vw;\n          height: 17vh;\n          width: 10vw;\n          background-color: white;\n          box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.4);\n          font-weight: 700;\n          font-size: 5rem;\n          color: darkslategray;\n          flex-direction: row;\n          display: flex;\n          justify-content: center;\n          cursor: pointer;\n        `}\n      >\n        →\n      </div>\n    )\n  );\n};\n\nconst Menu = ({ onClickNext }) => {\n  const numOptions = 3;\n  const lowBeam = 0;\n  const highBeam = 1;\n  const opacities = {};\n\n  const [selected, setSelected] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const optionMessageData = {\n    0: \"An apology\",\n    1: \"A work in progress\",\n    2: \"A struggle\",\n  };\n\n  const isSelected = (index) => selected.indexOf(index) !== -1;\n\n  const toggleSelected = (index) => {\n    const selectedCopy = [...selected];\n    const idxIndex = selectedCopy.indexOf(index);\n\n    if (idxIndex === -1) {\n      if (selectedCopy.length < 2) selectedCopy.push(index);\n    } else {\n      selectedCopy.splice(idxIndex, 1);\n    }\n\n    setSelected(selectedCopy);\n  };\n\n  for (let i = 0; i < numOptions; i++) {\n    opacities[i] = isSelected(i) ? highBeam : lowBeam;\n  }\n\n  return (\n    <Container>\n      <StyledImage src={home} />\n      {[...Array(numOptions).keys()].map((x, i) => {\n        const Tagname = eval(`OverlayOption${i}`);\n        return (\n          <Tagname\n            css={css`\n              opacity: ${opacities[i]};\n            `}\n            onClick={() => {\n              toggleSelected(i);\n            }}\n            onMouseOver={() => {\n              setMessage(optionMessageData[i]);\n            }}\n            onMouseOut={() => {\n              setMessage(\"\");\n            }}\n          />\n        );\n      })}\n      <HelpSection visible={true} message={message} />\n      <NextPanel\n        visible={selected.length === 2}\n        onClick={() => {\n          console.log(\"menu.js > onClick\");\n          onClickNext(selected);\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default Menu;\n\n/*\n\ntodo\n\n* load the image\n* make it stretch\n* add overlay divs for selecting options\n* \n\n*/\n","module.exports = __webpack_public_path__ + \"static/media/home.e0542d5e.png\";","module.exports = __webpack_public_path__ + \"static/media/page0.a6ef98c0.png\";","module.exports = __webpack_public_path__ + \"static/media/scrolling.f1142b98.gif\";","module.exports = __webpack_public_path__ + \"static/media/page1.f5de3dcf.png\";","module.exports = __webpack_public_path__ + \"static/media/page2.359fbcd6.png\";","module.exports = __webpack_public_path__ + \"static/media/end.325d1332.png\";","module.exports = __webpack_public_path__ + \"static/media/image1.cec5d603.png\";","module.exports = __webpack_public_path__ + \"static/media/image2.a46817b4.png\";","module.exports = __webpack_public_path__ + \"static/media/image3.f01105f8.png\";","module.exports = __webpack_public_path__ + \"static/media/draymond_green.203110.25177a8c.png\";","module.exports = __webpack_public_path__ + \"static/media/kevin_durant.201142.2803ebc0.png\";","module.exports = __webpack_public_path__ + \"static/media/the_view.acc24c4c.png\";","module.exports = __webpack_public_path__ + \"static/media/one.d526af93.png\";"],"sourceRoot":""}